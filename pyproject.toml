[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "contextgraph"
version = "0.1.0"
description = "A powerful graph database with Cypher query support and advanced visualization capabilities"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["graph", "database", "cypher", "context", "networkx", "visualization"]
requires-python = ">=3.8"
dependencies = [
    "igraph>=0.10.0",
    "pyparsing>=3.0.0",
]

[project.optional-dependencies]
visualization = [
    "matplotlib>=3.5.0",
    "networkx>=2.6.0",
    "plotly>=5.0.0",
]
graphviz = [
    "graphviz>=0.19.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "flake8>=3.8.0",
    "black>=21.0.0",
    "mypy>=0.800",
]
all = [
    "matplotlib>=3.5.0",
    "networkx>=2.6.0",
    "plotly>=5.0.0",
    "graphviz>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/contextgraph"
Documentation = "https://github.com/yourusername/contextgraph#readme"
Repository = "https://github.com/yourusername/contextgraph"
"Bug Tracker" = "https://github.com/yourusername/contextgraph/issues"
Changelog = "https://github.com/yourusername/contextgraph/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["contextgraph"]

[tool.setuptools.package-data]
contextgraph = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["contextgraph"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

